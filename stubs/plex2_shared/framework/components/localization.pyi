# -*- coding: utf-8 -*-
#
# Copyright (c) 2021~2999 - Cologler <skyoflw@gmail.com>
# ----------
#
# ----------

from typing import *

from ..base import ConstantGroup

class Language(ConstantGroup):
    Unknown: str
    Afar: str
    Abkhazian: str
    Afrikaans: str
    Akan: str
    Albanian: str
    Amharic: str
    Arabic: str
    Aragonese: str
    Armenian: str
    Assamese: str
    Avaric: str
    Avestan: str
    Aymara: str
    Azerbaijani: str
    Bashkir: str
    Bambara: str
    Basque: str
    Belarusian: str
    Bengali: str
    Bihari: str
    Bislama: str
    Bosnian: str
    Breton: str
    Bulgarian: str
    Burmese: str
    Catalan: str
    Chamorro: str
    Chechen: str
    Chinese: str
    ChurchSlavic: str
    Chuvash: str
    Cornish: str
    Corsican: str
    Cree: str
    Czech: str
    Danish: str
    Divehi: str
    Dutch: str
    Dzongkha: str
    English: str
    Esperanto: str
    Estonian: str
    Ewe: str
    Faroese: str
    Fijian: str
    Finnish: str
    French: str
    Frisian: str
    Fulah: str
    Georgian: str
    German: str
    Gaelic: str
    Irish: str
    Galician: str
    Manx: str
    Greek: str
    Guarani: str
    Gujarati: str
    Haitian: str
    Hausa: str
    Hebrew: str
    Herero: str
    Hindi: str
    HiriMotu: str
    Croatian: str
    Hungarian: str
    Igbo: str
    Icelandic: str
    Ido: str
    SichuanYi: str
    Inuktitut: str
    Interlingue: str
    Interlingua: str
    Indonesian: str
    Inupiaq: str
    Italian: str
    Javanese: str
    Japanese: str
    Kalaallisut: str
    Kannada: str
    Kashmiri: str
    Kanuri: str
    Kazakh: str
    Khmer: str
    Kikuyu: str
    Kinyarwanda: str
    Kirghiz: str
    Komi: str
    Kongo: str
    Korean: str
    Kuanyama: str
    Kurdish: str
    Lao: str
    Latin: str
    Latvian: str
    Limburgan: str
    Lingala: str
    Lithuanian: str
    Luxembourgish: str
    LubaKatanga: str
    Ganda: str
    Macedonian: str
    Marshallese: str
    Malayalam: str
    Maori: str
    Marathi: str
    Malay: str
    Malagasy: str
    Maltese: str
    Moldavian: str
    Mongolian: str
    Nauru: str
    Navajo: str
    SouthNdebele: str
    NorthNdebele: str
    Ndonga: str
    Nepali: str
    NorwegianNynorsk: str
    NorwegianBokmal: str
    Norwegian: str
    Chichewa: str
    Occitan: str
    Ojibwa: str
    Oriya: str
    Oromo: str
    Ossetian: str
    Panjabi: str
    Persian: str
    Pali: str
    Polish: str
    Portuguese: str
    Pushto: str
    Quechua: str
    RaetoRomance: str
    Romanian: str
    Rundi: str
    Russian: str
    Sango: str
    Sanskrit: str
    Serbian: str
    Sinhalese: str
    Slovak: str
    Slovenian: str
    Sami: str
    Samoan: str
    Shona: str
    Sindhi: str
    Somali: str
    Sotho: str
    Spanish: str
    Sardinian: str
    Swati: str
    Sundanese: str
    Swahili: str
    Swedish: str
    Tahitian: str
    Tamil: str
    Tatar: str
    Telugu: str
    Tajik: str
    Tagalog: str
    Thai: str
    Tibetan: str
    Tigrinya: str
    Tonga: str
    Tswana: str
    Tsonga: str
    Turkmen: str
    Turkish: str
    Twi: str
    Uighur: str
    Ukrainian: str
    Urdu: str
    Uzbek: str
    Venda: str
    Vietnamese: str
    Volapuk: str
    Welsh: str
    Walloon: str
    Wolof: str
    Xhosa: str
    Yiddish: str
    Yoruba: str
    Zhuang: str
    Zulu: str
    Brazilian: str
    NoLanguage: str

    @classmethod
    def All(cls) -> List[str]: ...
    @classmethod
    def Match(cls, name: str) -> str:
        """
        Attempt to match a given string to a language.

        Returns the unknown code (xx) if no match could be found.
        """

class CountryCodes(ConstantGroup):
    AF: str
    AL: str
    DZ: str
    AS: str
    AD: str
    AO: str
    AI: str
    AQ: str
    AG: str
    AR: str
    AM: str
    AW: str
    AU: str
    AT: str
    AZ: str
    BS: str
    BH: str
    BD: str
    BB: str
    BY: str
    BE: str
    BZ: str
    BJ: str
    BM: str
    BT: str
    BO: str
    BA: str
    BW: str
    BV: str
    BR: str
    BQ: str
    IO: str
    VG: str
    BN: str
    BG: str
    BF: str
    BI: str
    KH: str
    CM: str
    CA: str
    CT: str
    CV: str
    KY: str
    CF: str
    TD: str
    CL: str
    CN: str
    CX: str
    CC: str
    CO: str
    KM: str
    CG: str
    CD: str
    CK: str
    CR: str
    HR: str
    CU: str
    CY: str
    CZ: str
    CI: str
    DK: str
    DJ: str
    DM: str
    DO: str
    NQ: str
    DD: str
    EC: str
    EG: str
    SV: str
    GQ: str
    ER: str
    EE: str
    ET: str
    FK: str
    FO: str
    FJ: str
    FI: str
    FR: str
    GF: str
    PF: str
    TF: str
    FQ: str
    GA: str
    GM: str
    GE: str
    DE: str
    GH: str
    GI: str
    GR: str
    GL: str
    GD: str
    GP: str
    GU: str
    GT: str
    GG: str
    GN: str
    GW: str
    GY: str
    HT: str
    HM: str
    HN: str
    HK: str
    HU: str
    IS: str
    IN: str
    ID: str
    IR: str
    IQ: str
    IE: str
    IM: str
    IL: str
    IT: str
    JM: str
    JP: str
    JE: str
    JT: str
    JO: str
    KZ: str
    KE: str
    KI: str
    KW: str
    KG: str
    LA: str
    LV: str
    LB: str
    LS: str
    LR: str
    LY: str
    LI: str
    LT: str
    LU: str
    MO: str
    MK: str
    MG: str
    MW: str
    MY: str
    MV: str
    ML: str
    MT: str
    MH: str
    MQ: str
    MR: str
    MU: str
    YT: str
    FX: str
    MX: str
    FM: str
    MI: str
    MD: str
    MC: str
    MN: str
    ME: str
    MS: str
    MA: str
    MZ: str
    MM: str
    NA: str
    NR: str
    NP: str
    NL: str
    AN: str
    NT: str
    NC: str
    NZ: str
    NI: str
    NE: str
    NG: str
    NU: str
    NF: str
    KP: str
    VD: str
    MP: str
    NO: str
    OM: str
    PC: str
    PK: str
    PW: str
    PS: str
    PA: str
    PZ: str
    PG: str
    PY: str
    YD: str
    PE: str
    PH: str
    PN: str
    PL: str
    PT: str
    PR: str
    QA: str
    RO: str
    RU: str
    RW: str
    RE: str
    BL: str
    SH: str
    KN: str
    LC: str
    MF: str
    PM: str
    VC: str
    WS: str
    SM: str
    SA: str
    SN: str
    RS: str
    CS: str
    SC: str
    SL: str
    SG: str
    SK: str
    SI: str
    SB: str
    SO: str
    ZA: str
    GS: str
    KR: str
    ES: str
    LK: str
    SD: str
    SR: str
    SJ: str
    SZ: str
    SE: str
    CH: str
    SY: str
    ST: str
    TW: str
    TJ: str
    TZ: str
    TH: str
    TL: str
    TG: str
    TK: str
    TO: str
    TT: str
    TN: str
    TR: str
    TM: str
    TC: str
    TV: str
    UM: str
    PU: str
    VI: str
    UG: str
    UA: str
    SU: str
    AE: str
    GB: str
    US: str
    ZZ: str
    UY: str
    UZ: str
    VU: str
    VA: str
    VE: str
    VN: str
    WK: str
    WF: str
    EH: str
    YE: str
    ZM: str
    ZW: str
    AX: str

    @classmethod
    def All(cls) -> List[str]: ...

    @classmethod
    def MatchToCode(cls, name: str) -> str:
        """
        Attempt to match a given string to a country.

        Returns the unknown code (zz) if no match could be found.
        """

    @classmethod
    def MatchToCountry(cls, name: str) -> str:
        """
        Attempt to match a given string to a country.

        Returns the unknown code (zz) if no match could be found.
        """

class LocalString:
    def __str__(self) -> str: ...
    def localize(self, locale: Optional[str]) -> str: ...

class LocalStringPair:
    def __str__(self) -> str: ...
    def localize(self, locale: Optional[str]) -> str: ...

class LocalStringFormatter(LocalStringPair):
    ...

