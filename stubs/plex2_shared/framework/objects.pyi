# -*- coding: utf-8 -*-
#
# Copyright (c) 2021~2999 - Cologler <skyoflw@gmail.com>
# ----------
#
# ----------

from typing import *

from .base import Serializable

class ObjectFactory(object):
    def __init__(self, core, object_class: type): ...
    def __call__(self, *args, **kwargs) -> Any: ...
    def is_instance(self, obj: Any) -> bool: ...

class Object(Serializable):
    def __init__(self, core, **kwargs): ...
    def Content(self) -> None: ...
    def Status(self) -> 200: ...
    def Headers(self) -> dict: ...
    def SetHeader(self, name, value) -> None: ...
    def __repr__(self) -> str: ...

class Container(Object):
    def __init__(self, core, **kwargs): ...
    def __iter__(self) -> Iterator: ...
    def __len__(self) -> int: ...
    def __getitem__(self, key) -> Any: ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    def Append(self, obj): ...
    def Count(self, x) -> int: ...
    def Index(self, x) -> int: ...
    def Extend(self, x): ...
    def Insert(self, i, x): ...
    def Pop(self, i: int) -> Any: ...
    def Remove(self, x): ...
    def Reverse(self): ...
    def Sort(self, attr, descending=False):
        'sort by attr'
    def Clear(self): ...

class XMLObject(Object):
    tagName: str

    def __init__(self, core, **kwargs): ...
    def SetTagName(self, tagName): ...
    def ToElement(self) -> Any: ...
    def Content(self) -> str:
        'convert the element to xml string'
    def __str__(self) -> str: ...

class XMLContainer(XMLObject, Container):
    def __init__(self, core, **kwargs): ...
    def ToElement(self) -> Any: ...

class DataObject(Object):
    def __init__(self, core, data, contentType): ...
    def Content(self) -> Any: ...

class ItemInfoRecord:
    title1: Any
    title2: Any
    art: Any
    thumb: Any
    itemTitle: Any

class ContextMenu(XMLContainer):
    def ToElement(self, sender, contextKey, **kwargs) -> Any: ...

class MediaContainer(XMLContainer):
    viewGroup: Any
    disabledViewModes: Optional[str]
    def __init__(self, core, art=None, viewGroup=None, title1=None, title2=None,
                 noHistory=False, replaceParent=False, disabledViewModes=None,
                 **kwargs): ...
    def ToElement(self) -> Any: ...
    def __getitem__(self, item): ...

class MessageContainer(XMLContainer):
    def __init__(self, core, header, message, title1=None, title2=None, **kwargs): ...

class DirectoryItem(XMLObject):
    def __init__(self, core, key, title, subtitle=None, summary=None, thumb=None, art=None, **kwargs): ...

class PopupDirectoryItem(XMLObject):
    def __init__(self, core, key, title, subtitle=None, summary=None, thumb=None, art=None, **kwargs): ...

class InputDirectoryItem(XMLObject):
    def __init__(self, core, key, title, prompt, subtitle=None, summary=None, thumb=None, art=None, **kwargs): ...

class SearchDirectoryItem(InputDirectoryItem):
    def __init__(self, core, key, title, prompt, subtitle=None, summary=None, thumb=None, art=None, **kwargs): ...

class VideoItem(XMLContainer):
    def __init__(self, core, key=None, title=None, subtitle=None, summary=None,
                duration=None, thumb=None, art=None, type='clip', items=[],
                **kwargs): ...
    def Append(self, item): ...
    def ToElement(self): ...

class WebVideoItem(XMLObject):
    def __init__(self, core, url, title=None, subtitle=None, summary=None,
                 duration=None, thumb=None, art=None,
                 **kwargs): ...

class RTMPVideoItem(WebVideoItem):
    def __init__(self, core, url, clip=None, clips=None, width=None, height=None, live=False,
                 title=None, subtitle=None, summary=None, duration=None, thumb=None, art=None,
                 **kwargs): ...

class WindowsMediaVideoItem(WebVideoItem):
    def __init__(self, core, url, width=None, height=None, title=None, subtitle=None, summary=None,
                 duration=None, thumb=None, art=None, **kwargs): ...

class PhotoItem(XMLObject):
    def __init__(self, core, key, title, subtitle=None, summary=None, thumb=None, art=None, **kwargs): ...

class TrackItem(XMLObject):
    def __init__(self, core, key, title, artist=None, album=None, index=None,
                 rating=None, duration=None, size=None, thumb=None, art=None,
                 **kwargs): ...

class Function(XMLObject):
    def __init__(self, core, obj, ext=None, **kwargs): ...
    def AddFunctionArguments(self, **kwargs) -> None: ...
    def ToElement(self) -> Any: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...

class IndirectFunction(Function):
    def __str__(self) -> str: ...

class PrefsItem(DirectoryItem):
    def __init__(self, core, title=None, subtitle=None, summary=None, thumb=None, **kwargs): ...

class Redirect(Object):
    def __init__(self, core, url, temporary=True): ...
    def Status(self) -> int: ...
    def Content(self) -> str: ...

class MetadataSearchResult(XMLObject):
    def __init__(self, core, id, name=None, year=None, score=0, lang=None, thumb=None): ...
